!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
<C-p>	init.vim	/^nnoremap <C-p> :call pdv#DocumentWithSnip()<CR>$/;"	m
<Leader>K	plugins/phpactor.vim	/^nmap <Leader>K :call phpactor#Hover()<CR>$/;"	m
<Leader>K	plugins/phpactor.vim	/^nmap <silent><Leader>K :call phpactor#Hover()<CR>$/;"	m
<Leader>cc	plugins/phpactor.vim	/^nmap <Leader>cc :call phpactor#ClassNew()<CR>$/;"	m
<Leader>cv	plugins/phpactor.vim	/^nmap <Leader>cv :call phpactor#ChangeVisibility()<CR>$/;"	m
<Leader>e	plugins/phpactor.vim	/^nmap <Leader>e :call phpactor#ClassExpand()<CR>$/;"	m
<Leader>ee	plugins/phpactor.vim	/^nmap <silent><Leader>ee :call phpactor#ExtractExpression(v:false)<CR>$/;"	m
<Leader>ee	plugins/phpactor.vim	/^vmap <silent><Leader>ee :<C-U>call phpactor#ExtractExpression(v:true)<CR>$/;"	m
<Leader>em	plugins/phpactor.vim	/^vmap <silent><Leader>em :<C-U>call phpactor#ExtractMethod()<CR>$/;"	m
<Leader>mm	plugins/phpactor.vim	/^nmap <Leader>mm :call phpactor#ContextMenu()<CR>$/;"	m
<Leader>n	plugins/nerdtree.vim	/^map <Leader>n :NERDTreeToggle <CR>$/;"	m
<Leader>nn	plugins/phpactor.vim	/^nmap <Leader>nn :call phpactor#Navigate()<CR>$/;"	m
<Leader>o	plugins/phpactor.vim	/^nmap <Leader>o :call phpactor#GotoDefinition()<CR>$/;"	m
<Leader>pfm	plugins/phpactor.vim	/^map <silent><Leader>pfm :call phpactor#MoveFile()<CR>$/;"	m
<Leader>tt	plugins/phpactor.vim	/^nmap <Leader>tt :call phpactor#Transform()<CR>$/;"	m
<Leader>u	plugins/phpactor.vim	/^nmap <Leader>u :call phpactor#UseAdd()<CR>$/;"	m
<Leader>ve	general.vim	/^map <Leader>ve :tabnew ~\/.config\/nvim\/init.vim<CR>$/;"	m
<S-Tab>	general.vim	/^nnoremap <S-Tab> :bprevious<CR>$/;"	m
<S-Tab>	plugins/ncm2.vim	/^inoremap <expr> <S-Tab> pumvisible() ? "\\<C-p>" : "\\<S-Tab>"$/;"	m
<Tab>	general.vim	/^nnoremap <Tab> :bnext<CR>$/;"	m
<Tab>	plugins/ncm2.vim	/^inoremap <expr> <Tab> pumvisible() ? "\\<C-n>" : "\\<Tab>"$/;"	m
<leader>p	general.vim	/^nmap <leader>p :r! cat \/tmp\/vitmp<CR>$/;"	m
<leader>y	general.vim	/^vmap <leader>y :w! \/tmp\/vitmp<CR>$/;"	m
CloseIfOnlyNerdTreeLeft	plugins/nerdtree.vim	/^function! s:CloseIfOnlyNerdTreeLeft()$/;"	f
NERDTreeCascadeOpenSingleChildDir	plugins/nerdtree.vim	/^let NERDTreeCascadeOpenSingleChildDir=0$/;"	v
NERDTreeCascadeSingleChildDir	plugins/nerdtree.vim	/^let NERDTreeCascadeSingleChildDir=0$/;"	v
NERDTreeShowHidden	plugins/nerdtree.vim	/^let NERDTreeShowHidden=1$/;"	v
NERDTreeWinSize	plugins/nerdtree.vim	/^let NERDTreeWinSize=50$/;"	v
g:UltiSnipsExpandTrigger	plugins/ultisnips.vim	/^let g:UltiSnipsExpandTrigger="<C-s>"$/;"	v
g:UltiSnipsJumpBackwardTrigger	plugins/ultisnips.vim	/^let g:UltiSnipsJumpBackwardTrigger="<C-k>"$/;"	v
g:UltiSnipsJumpForwardTrigger	plugins/ultisnips.vim	/^let g:UltiSnipsJumpForwardTrigger="<C-j>"$/;"	v
g:UltiSnipsSnippetDirectories	plugins/ultisnips.vim	/^let g:UltiSnipsSnippetDirectories=["\/home\/kevin\/nvim\/plugged\/vim-snippets\/UltiSnips"]$/;"	v
g:airline_powerline_fonts	init.vim	/^let g:airline_powerline_fonts = 1$/;"	v
g:ale_completion_enabled	plugins/ale.vim	/^let g:ale_completion_enabled = 0$/;"	v
g:ale_fix_on_save	plugins/ale.vim	/^let g:ale_fix_on_save = 1$/;"	v
g:ale_fixers	plugins/ale.vim	/^let g:ale_fixers = {$/;"	v
g:ale_linters	plugins/ale.vim	/^let g:ale_linters = {'php': ['php', 'phpstan', 'phpmd']}$/;"	v
g:ale_php_phpstan_executable	plugins/ale.vim	/^let g:ale_php_phpstan_executable = '.\/vendor\/bin\/phpstan'$/;"	v
g:ctrlp_cmd	plugins/ctrlp.vim	/^let g:ctrlp_cmd = 'CtrlPMixed'$/;"	v
g:ctrlp_map	plugins/ctrlp.vim	/^let g:ctrlp_map = '<c-f>'$/;"	v
g:pdv_template_dir	init.vim	/^let g:pdv_template_dir = $HOME ."\/.vim\/pdv\/templates_snip"$/;"	v
g:phpactorBranch	plugins/phpactor.vim	/^let g:phpactorBranch = 'master' " phpactor branch to use$/;"	v
g:phpactorOmniAutoClassImport	plugins/phpactor.vim	/^let g:phpactorOmniAutoClassImport = v:true " automatically import classes with omnicomplete$/;"	v
g:phpactorPhpBin	plugins/phpactor.vim	/^let g:phpactorPhpBin = 'php' " php executable to use$/;"	v
g:signify_vcs_list	init.vim	/^let g:signify_vcs_list = ['git']$/;"	v
t<C-l>	plugins/vim-test.vim	/^nmap <silent> t<C-l> :TestLast<CR>$/;"	m
t<C-n>	plugins/vim-test.vim	/^nmap <silent> t<C-n> :TestNearest<CR>$/;"	m
t<C-t>	plugins/vim-test.vim	/^nmap <silent> t<C-t> :TestFile<CR>$/;"	m
test#strategy	plugins/vim-test.vim	/^let test#strategy = {$/;"	v
